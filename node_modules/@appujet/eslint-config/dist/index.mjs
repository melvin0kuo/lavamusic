// index.js
import * as augu from "@augu/eslint-config";
import eslint from "@eslint/js";
import stylistic from "@stylistic/eslint-plugin";
import * as tsParser from "@typescript-eslint/parser";
import eslintPluginImportX from "eslint-plugin-import-x";
import globals from "globals";
import { config as tsEslintConfig, configs as tsConfigs } from "typescript-eslint";
function config(rootdir, ...additionalConfig) {
  return tsEslintConfig(
    {
      ignores: ["docs/*", "dist/*", "node_modules/*"]
    },
    eslint.configs.recommended,
    ...tsConfigs.recommendedTypeChecked,
    ...tsConfigs.stylisticTypeChecked,
    augu.javascript(),
    eslintPluginImportX.flatConfigs.recommended,
    eslintPluginImportX.flatConfigs.typescript,
    stylistic.configs["disable-legacy"],
    {
      languageOptions: {
        ecmaVersion: "latest",
        sourceType: "module",
        parser: tsParser,
        parserOptions: {
          projectService: true,
          tsconfigRootDir: rootdir
        },
        globals: {
          ...globals.nodeBuiltin,
          ...globals.builtin,
          ...globals.es2021
        }
      },
      plugins: {
        "@stylistic": stylistic
      },
      rules: {
        // Stylistic rules
        "@stylistic/semi": ["error"],
        "@stylistic/member-delimiter-style": ["error"],
        "@stylistic/indent": ["error", "tab", { "SwitchCase": 1 }],
        "@stylistic/space-infix-ops": ["error"],
        "@stylistic/key-spacing": ["error", { "mode": "strict" }],
        "@stylistic/keyword-spacing": ["error"],
        "@stylistic/indent-binary-ops": ["error", 4],
        "@stylistic/type-generic-spacing": ["error"],
        "@stylistic/type-named-tuple-spacing": ["error"],
        "@stylistic/type-annotation-spacing": ["error", { "before": false, "after": true, "overrides": { "arrow": { "before": true, "after": true } } }],
        "@stylistic/quotes": ["error", "single"],
        "@stylistic/comma-dangle": ["error", "never"],
        "@stylistic/brace-style": ["error", "1tbs"],
        "@stylistic/object-curly-spacing": ["error", "always", { "objectsInObjects": false, "arraysInObjects": false }],
        "@stylistic/array-bracket-spacing": ["error", "always", { "objectsInArrays": false, "arraysInArrays": false }],
        "@stylistic/block-spacing": ["error", "always"],
        "@stylistic/arrow-spacing": "error",
        "@stylistic/switch-colon-spacing": ["error", { "after": true, "before": false }],
        "@stylistic/no-multiple-empty-lines": ["error", { "max": 1 }],
        "@stylistic/eol-last": ["warn", "always"],
        "@stylistic/no-trailing-spaces": ["warn", { "ignoreComments": true }],
        // TypeScript specific rules
        "@typescript-eslint/require-await": ["warn"],
        // Import-X rules
        "import-x/no-extraneous-dependencies": ["error"],
        "import-x/no-mutable-exports": ["warn"],
        "import-x/no-unused-modules": ["warn"],
        "import-x/no-amd": ["error"],
        "import-x/no-commonjs": ["error"],
        "import-x/no-import-module-exports": ["error"],
        "import-x/unambiguous": ["warn"],
        "import-x/no-absolute-path": ["error"],
        "import-x/no-cycle": ["error"],
        "import-x/no-relative-packages": ["error"],
        "import-x/no-self-import": ["error"],
        "import-x/no-useless-path-segments": ["warn"],
        "import-x/consistent-type-specifier-style": ["error", "prefer-top-level"],
        "import-x/extensions": ["error", "ignorePackages"],
        "import-x/first": ["warn"],
        "import-x/newline-after-import": ["warn"],
        "import-x/no-unassigned-import": ["warn"],
        "import-x/no-default-export": ["warn"],
        "import-x/order": ["warn", {
          alphabetize: { caseInsensitive: true, order: "asc" },
          groups: ["builtin", "external", "internal", "parent", "sibling"]
        }],
        // Enforce no duplicate imports
        "no-duplicate-imports": ["error"]
      }
    },
    {
      files: ["**/*.js", "**/*.cjs", "**/*.mjs"],
      rules: {
        "require-await": ["warn"],
        "no-unused-vars": ["warn"]
      }
    },
    ...additionalConfig
  );
}
export {
  config as default
};
//# sourceMappingURL=index.mjs.map